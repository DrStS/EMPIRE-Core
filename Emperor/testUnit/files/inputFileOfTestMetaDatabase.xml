<?xml version="1.0" encoding="UTF-8"?>
<EMPEROR>
	<clientCode name="meshClientA">
		<mesh name="myMesh">
			<dataField name="displacements" dimension="vector"
				location="atNode" typeOfQuantity="field" />
			<dataField name="forces" location="atNode" dimension="vector"
				typeOfQuantity="fieldIntegral" />
		</mesh>
		<signal name="signal" size="2 2 2" />
	</clientCode>
	<clientCode name="meshClientB">
		<mesh name="myMesh">
			<dataField name="displacements" dimension="vector"
				location="atNode" typeOfQuantity="field" />
			<dataField name="tractionsElem" location="atElemCentroid"
				dimension="vector" typeOfQuantity="field" />
			<dataField name="tractionsNode" location="atNode"
				dimension="vector" typeOfQuantity="field" />
		</mesh>
		<signal name="signal" size="5" />
	</clientCode>
	<clientCode name="optimizer">
		<signal name="design" size="1" />
		<signal name="objective" size="1" />
	</clientCode>
	
	
	
	<dataOutput name="dataOutput1" interval="5">
		<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
			dataFieldName="displacements" />
		<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
			dataFieldName="forces" />
		<signalRef clientCodeName="meshClientA" signalName="signal" />
		<signalRef clientCodeName="meshClientB" signalName="signal" />
	</dataOutput>
	<dataOutput name="dataOutput2" interval="1">
		<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
			dataFieldName="displacements" />
		<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
			dataFieldName="forces" />
		<signalRef clientCodeName="meshClientA" signalName="signal" />
		<signalRef clientCodeName="meshClientB" signalName="signal" />
	</dataOutput>
	
	
	
	<mapper name="mortar1" type="mortarMapper">
		<meshA>
			<meshRef clientCodeName="meshClientA" meshName="myMesh" />
		</meshA>
		<meshB>
			<meshRef clientCodeName="meshClientB" meshName="myMesh" />
		</meshB>
		<mortarMapper oppositeSurfaceNormal="false" dual="true"
			enforceConsistency="true" />
	</mapper>
	<mapper name="nn" type="nearestNeighborMapper">
		<!-- mapping displacements from meshA to meshB, mapping forces from meshB 
			to meshA. -->
		<meshA>
			<meshRef clientCodeName="meshClientA" meshName="myMesh" />
		</meshA>
		<meshB>
			<meshRef clientCodeName="meshClientB" meshName="myMesh" />
		</meshB>
	</mapper>
	<mapper name="bi" type="barycentricInterpolationMapper">
		<!-- mapping displacements from meshA to meshB, mapping forces from meshB 
			to meshA. -->
		<meshA>
			<meshRef clientCodeName="meshClientA" meshName="myMesh" />
		</meshA>
		<meshB>
			<meshRef clientCodeName="meshClientB" meshName="myMesh" />
		</meshB>
	</mapper>
	
	
	
	<couplingAlgorithm type="constantRelaxation" name="cr">
		<residual index="1">
			<component coefficient="1" timeToUpdate="iterationBeginning">
				<signalRef clientCodeName="meshClientA" signalName="signal" />
			</component>
			<component coefficient="-1" timeToUpdate="iterationEnd">
				<signalRef clientCodeName="meshClientA" signalName="signal" />
			</component>
		</residual>
		<output index="1">
			<signalRef clientCodeName="meshClientA" signalName="signal" />
		</output>
		<constantRelaxation relaxationFactor="0.3" />
	</couplingAlgorithm>
	
	
	
	<extrapolator type="linearExtrapolator" name="extrapolate displacement">
		<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
			dataFieldName="displacements" />
	</extrapolator>
	
	
	
	<connection name="transfer displacements">
		<input>
			<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
				dataFieldName="displacements" />
		</input>
		<output>
			<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
				dataFieldName="displacements" />
		</output>
		<sequence>
			<filter type="mappingFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
						dataFieldName="displacements" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
						dataFieldName="displacements" />
				</output>
				<mappingFilter>
					<mapperRef mapperName="mortar1" />
				</mappingFilter>
			</filter>
		</sequence>
	</connection>
	<connection name="transfer forces">
		<input>
			<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
				dataFieldName="tractionsElem" />
		</input>
		<output>
			<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
				dataFieldName="forces" />
		</output>
		<sequence>
			<filter type="locationFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
						dataFieldName="tractionsElem" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
						dataFieldName="tractionsNode" />
				</output>
			</filter>
			<filter type="mappingFilter">
				<input>
					<dataFieldRef clientCodeName="meshClientB" meshName="myMesh"
						dataFieldName="tractionsNode" />
				</input>
				<output>
					<dataFieldRef clientCodeName="meshClientA" meshName="myMesh"
						dataFieldName="forces" />
				</output>
				<mappingFilter>
					<mapperRef mapperName="mortar1" />
				</mappingFilter>
			</filter>
		</sequence>
	</connection>
	<connection name="transfer signal">
		<input>
			<signalRef clientCodeName="meshClientA" signalName="signal" />
		</input>
		<output>
			<signalRef clientCodeName="meshClientB" signalName="signal" />
		</output>
		<sequence>
			<filter type="copyFilter">
				<input>
					<signalRef clientCodeName="meshClientA" signalName="signal" />
				</input>
				<output>
					<signalRef clientCodeName="meshClientB" signalName="signal" />
				</output>
			</filter>
		</sequence>
	</connection>
	
	
	
	<coSimulation>
		<sequence>
			<couplingLogic type="optimizationLoop">
				<optimizationLoop maxNumOfIterations="5000">
					<convergenceSignalSender>
						<clientCodeRef clientCodeName="optimizer" />
					</convergenceSignalSender>
					<convergenceSignalReceiver>
						<clientCodeRef clientCodeName="meshClientA" />
					</convergenceSignalReceiver>
					<convergenceSignalReceiver>
						<clientCodeRef clientCodeName="meshClientB" />
					</convergenceSignalReceiver>
					<dataOutputRef dataOutputName="dataOutput1" />
				</optimizationLoop>
				<sequence>
					<couplingLogic type="timeStepLoop">
						<timeStepLoop numTimeSteps="5">
							<dataOutputRef dataOutputName="dataOutput1" />
							<extrapolatorRef extrapolatorName="extrapolate displacement" />
						</timeStepLoop>
						<sequence>
							<couplingLogic type="iterativeCouplingLoop">
								<iterativeCouplingLoop>
									<convergenceChecker maxNumOfIterations="100">
										<checkResidual relativeTolerance="0"
											absoluteTolerance="1e-5">
											<residualRef couplingAlgorithmName="cr" index="1" />
										</checkResidual>
									</convergenceChecker>
									<convergenceObserver>
										<clientCodeRef clientCodeName="meshClientA" />
									</convergenceObserver>
									<convergenceObserver>
										<clientCodeRef clientCodeName="meshClientB" />
									</convergenceObserver>
									<couplingAlgorithmRef
										couplingAlgorithmName="cr" />
									<dataOutputRef dataOutputName="dataOutput2" />
								</iterativeCouplingLoop>
								<sequence>
									<couplingLogic type="connection">
										<connectionRef connectionName="transfer displacements" />
									</couplingLogic>
									<couplingLogic type="connection">
										<connectionRef connectionName="transfer forces" />
									</couplingLogic>
									<couplingLogic type="connection">
										<connectionRef connectionName="transfer signal" />
									</couplingLogic>
								</sequence>
							</couplingLogic>
						</sequence>
					</couplingLogic>
				</sequence>
			</couplingLogic>
		</sequence>
	</coSimulation>
	<general>
		<verbosity>DeBuG</verbosity>
		<portFile>server.port</portFile>
	</general>
</EMPEROR>
